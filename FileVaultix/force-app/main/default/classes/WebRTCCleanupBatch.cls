/**
 * @class WebRTCCleanupBatch
 * @description
 *   Batch Apex class to automate the cleanup of WebRTC_Session__c records in Salesforce.
 *   This batch job identifies all WebRTC session records with a 'Closed' status that were created
 *   more than 45 days ago, deletes them in batches, and sends a summary email upon completion.
 *
 *   The summary email includes the total number of records deleted, the status filter applied,
 *   and the timestamp of the operation. The email is sent using a specified Org-Wide Email Address.
 *
 * @author Saurabh Patil
 * @created 2024-06-08
 * @lastModified 2024-06-08
 * @lastModifiedBy Saurabh Patil
 *
 * @usage
 *   To execute the batch, instantiate and run via:
 *     Database.executeBatch(new WebRTCCleanupBatch());
 *
 * @notes
 *   - Ensure the Org-Wide Email Address 'notify.operations.team@gmail.com' exists and is verified.
 *   - Update email addresses and filters as per organizational requirements.
 *   - This class is intended for scheduled or manual cleanup operations.
 */
public class WebRTCCleanupBatch implements Database.Batchable<SObject> {

    private Integer deletedCount = 0;
    private static Final String BATCH_NAME = 'WebRTC Cleanup Batch';
    private static final String NOTIFYING_EMAIL = System.Label.Notify_Email_Address; // Use a custom label for email address
    private static final String OWD_ADDRESS = System.Label.Batch_OWD_Address; // Use a custom label for Org-Wide Email Address

    // Step 1: Query all WebRTC records with 'Closed' status
    public Database.QueryLocator start(Database.BatchableContext bc) {
        return Database.getQueryLocator([
            SELECT Id 
            FROM WebRTC_Session__c 
            WHERE Session_Status__c = 'Closed' 
            AND CreatedDate <= :System.now().addDays(-45)
        ]);
    }

    // Step 2: Delete all records in the current scope and count them
    public void execute(Database.BatchableContext bc, List<SObject> scope) {
        List<	WebRTC_Session__c> webrtcRecords = (List<WebRTC_Session__c>) scope;
        deletedCount += webrtcRecords.size();
        delete webrtcRecords;
    }

    // Step 3: Send email after cleanup with details
    public void finish(Database.BatchableContext bc) {
        try {
            // Fetch Org-Wide Email Address (OWEA)
            OrgWideEmailAddress owea = [
                SELECT Id 
                FROM OrgWideEmailAddress 
                WHERE Address =: OWD_ADDRESS //Change it to your email address
                LIMIT 1
            ];

            // Format email body
            String htmlBody = ''
                + '<html><body style="font-family: Arial, sans-serif;">'
                + '<div style="padding: 20px; border: 1px solid #ccc; border-radius: 10px;">'
                + '<h2 style="color: #2E86C1;">üßπ FileVaultix - WebRTC Cleanup Summary</h2>'
                + '<p>Hello Saurabh,</p>'
                + '<p>We have successfully completed the scheduled cleanup operation for WebRTC sessions.</p>'
                + '<ul>'
                + '<li><strong>Total Records Deleted:</strong> ' + deletedCount + '</li>'
                + '<li><strong>Status Filter:</strong> Closed</li>'
                + '<li><strong>Timestamp:</strong> ' + DateTime.now().format('MMM dd, yyyy HH:mm:ss z') + '</li>'
                + '</ul>'
                + '<p>This email is auto-generated by FileVaultix cleanup automation.</p>'
                + '<p>If you have questions or wish to disable auto-cleanup, please reach out to the admin team.</p>'
                + '<br><p>Thanks & Regards,</p>'
                + '<p><strong>FileVaultix Cleanup Team</strong></p>'
                + '</div></body></html>';

            // Prepare email
            Messaging.SingleEmailMessage email = new Messaging.SingleEmailMessage();
            email.setToAddresses(new String[] { NOTIFYING_EMAIL });
            email.setSubject('[Attention] üßπ WebRTC Cleanup Summary ‚Äì FileVaultix');
            email.setHtmlBody(htmlBody);
            email.setOrgWideEmailAddressId(owea.Id);

            // Send email
            Messaging.sendEmail(new Messaging.SingleEmailMessage[] { email });
        } catch (Exception e) {
            System.debug('‚ùå Failed to send cleanup summary email: ' + e.getMessage());
        }
    }
}